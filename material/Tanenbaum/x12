idea of having two separate programming departments with nothing in common.
When the time came to replace these two series, IBM took a radical step. It introduced a single product line, the System/360, based on integrated circuits, that
was designed for both scientific and commercial computing. The System/360 contained many innovations, the most important of which was that it was a family of
about a half-dozen machines with the same assembly language, and increasing size
and power. A company could replace its 1401 with a 360 Model 30 and its 7094
with a 360 Model 75. The Model 75 was bigger and faster (and more expensive),
but software written for one of them could, in principle, run on the other. In practice, a program written for a small model would run on a large model without problems. However, the reverse was not true. When moving a program written for a
large model to a smaller machine, the program might not fit in memory. Still, this
was a major improvement over the situation with the 7094 and 1401. The idea of
machine families caught on instantly, and within a few years most computer manufacturers had a family of common machines spanning a wide range of price and
performance. Some characteristics of the initial 360 family are shown in Fig. 1-7.
Other models were introduced later.
Property
Relative performance
Cycle time (in billionths of a sec)
Maximum memory (bytes)

Model 30
1

Model 40
3.5

Model 50

Model 65

10

21

1000

625

500

250

65,536

262,144

262,144

524,288

Bytes fetched per cycle

1

2

4

16

Maximum number of data channels

3

3

4

6

Figure 1-7. The initial offering of the IBM 360 product line.

Another major innovation in the 360 was multiprogramming, having several
programs in memory at once, so that when one was waiting for input/output to
complete, another could compute. This resulted in a higher CPU utilization.
The 360 also was the first machine that could emulate (simulate) other computers. The smaller models could emulate the 1401, and the larger ones could
emulate the 7094, so that customers could continue to run their old unmodified binary programs while converting to the 360. Some models ran 1401 programs so
much faster than the 1401 itself that many customers never converted their programs.
Emulation was easy on the 360 because all the initial models and most of the
later models were microprogrammed. All IBM had to do was write three microprograms, for the native 360 instruction set, the 1401 instruction set, and the 7094

SEC. 1.2

MILESTONES IN COMPUTER ARCHITECTURE

23

instruction set. This flexibility was one of the main reasons microprogramming
was introduced in the 360. Wilkesâ€™ motivation of reducing tube count no longer
mattered, of course, since the 360 did not have any tubes.
The 360 solved the dilemma of binary-parallel versus serial decimal with a
compromise: the machine had 16 32-bit registers for binary arithmetic, but its
memory was byte-oriented, like that of the 1401. It also had 1401 style serial instructions for moving variably sized records around memory.
Another major feature of the 360 was a (for that time) huge address space of
224 (16,777,216) bytes. With memory costing several dollars per byte in those
days, this much memory looked very much like infinity. Unfortunately, the 360
series was later followed by the 370, 4300, 3080, 3090, 390 and z series, all using
essentially the same architecture. By the mid 1980s, the memory limit became a
real problem, and IBM had to partially abandon compatibility when it went to
32-bit addresses needed to address the new 232 -byte memory.
With hindsight, it can be argued that since they had 32-bit words and registers
anyway, they probably should have had 32-bit addresses as well, but at the time no
one could imagine a machine with 16 million bytes of memory. While the transition to 32-bit addresses was successful for IBM, it was again only a temporary
