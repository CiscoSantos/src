
Pop two words from stack; push Boolean AND

0x99

IFEQ offset

Pop word from stack and branch if it is zero

0x9B

IFLT offset

Pop word from stack and branch if it is less than zero

0x9F

IF ICMPEQ offset

Pop two words from stack; branch if equal

0x84

IINC varnum const

Add a constant to a local variable

0x15

ILOAD varnum

Push local variable onto stack

0xB6

INVOKEVIRTUAL disp

Invoke a method

0x80

IOR

Pop two words from stack; push Boolean OR

0xAC

IRETURN

Return from method with integer value

0x36

ISTORE varnum

Pop word from stack and store in local variable

0x64

ISUB

Pop two words from stack; push their difference

0x13

LDC W index

Push constant from constant pool onto stack

0x00

NOP

Do nothing

0x57

POP

Delete word on top of stack

0x5F

SWAP

Swap the two top words on the stack

0xC4

WIDE

Prefix instruction; next instruction has a 16-bit index

Figure 4-11. The IJVM instruction set. The operands byte, const, and varnum
are 1 byte. The operands disp, index, and offset are 2 bytes.

Instructions are provided to push a word from various sources onto the stack.
These sources include the constant pool (LDC W), the local variable frame (ILOAD),
and the instruction itself (BIPUSH). A variable can also be popped from the stack
and stored into the local variable frame (ISTORE). Two arithmetic operations (IADD
