two bases of exponentiation. In these examples a 16-bit fraction (including sign
bit) and a 7-bit exponent using excess 64 notation are shown. The radix point is to
the left of the leftmost fraction bit—that is, to the right of the exponent.

B.2 IEEE FLOATING-POINT STANDARD 754
Until about 1980, each computer manufacturer had its own floating-point format. Needless to say, all were different. Worse yet, some of them actually did
arithmetic incorrectly because floating-point arithmetic has some subtleties not obvious to the average hardware designer.

SEC. B.2

IEEE FLOATING-POINT STANDARD 754

685

Example 1: Exponentiation to the base 2
2–2
2–1

Unnormalized:

0 1010100

.0

2–4
2–3

2–6
2–5

2–8
2–7

2–10
2–9

2–12

2–11

2–14

2–13

2–16

2–15

20
–12
–13
–15
0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 = 2 (1 × 2 + 1 × 2 + 1 × 2

+ 1 × 2–16) = 432
Sign Excess 64
Fraction is 1 × 2–12+ 1 × 2–13
+1 × 2–15+ 1 × 2–16
+ exponent is
84 – 64 = 20
To normalize, shift the fraction left 11 bits and subtract 11 from the exponent.
Normalized:

0 1001001

.1

1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 = 29 (1 × 2–1+ 1 × 2–2+ 1 × 2–4
+ 1 × 2–5) = 432

Fraction is 1 × 2–1 + 1 × 2–2
+1 × 2–4 + 1 × 2–5

Sign Excess 64
+ exponent is
73 – 64 = 9

Example 2: Exponentiation to the base 16

Unnormalized:

0 1000101

.

16–1

16–2

16–3

0 0 00

0 0 00

0 0 01

16–4
1 0 1 1 = 165 (1 × 16–3+ B × 16–4) = 432

